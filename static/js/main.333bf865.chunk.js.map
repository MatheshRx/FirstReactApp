{"version":3,"sources":["Components/Ui/Container.js","Components/Ui/Row.js","Components/Card/Card.js","Components/Card/FinalCard.js","Components/Input/Input.js","App.js","index.js"],"names":["Container","props","className","children","Row","Card","alt","src","id","name","email","FinalCard","botArray","map","robot","Math","random","toString","Input","type","placeholder","onChange","inApp","htmlFor","App","useState","user","setUser","input","setInput","useEffect","fetch","then","response","json","users","event","target","value","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAMeA,EAJG,SAACC,GACf,OAAO,qBAAKC,UAAU,iBAAf,SAAiCD,EAAME,YCGnCC,EAJH,SAACH,GACT,OAAO,qBAAKC,UAAS,cAASD,EAAMC,WAA7B,SAA2CD,EAAME,YCc7CE,EAfF,SAACJ,GACV,OACI,qBAAKC,UAAU,mBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKI,IAAI,SAASC,IAAG,+BAA0BN,EAAMO,MACrD,sBAAKN,UAAU,MAAf,UACI,6BAAKD,EAAMQ,OACX,4BAAIR,EAAMS,iBCQfC,EAZG,SAACV,GACf,OACI,cAAC,EAAD,CAAKC,UAAU,8DAAf,SACGD,EAAMW,SAASC,KAAI,SAAAC,GAClB,OACE,cAAC,EAAD,CAAqCN,GAAIM,EAAMN,GAAIC,KAAMK,EAAML,KAAMC,MAAOI,EAAMJ,OAAvEK,KAAKC,SAASC,kBCIxBC,EAVD,SAACjB,GAEX,OACI,sBAAKC,UAAU,gDAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAU,eAAekB,YAAY,WAAWC,SAAUpB,EAAMqB,QACnF,uBAAOC,QAAQ,OAAf,sBC0DGC,EA1BH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAW,WACTC,MAAM,8CACHC,MAAM,SAACC,GAAD,OAAcA,EAASC,UAC7BF,MAAM,SAAAG,GAAK,OAAIR,EAAQQ,QAC1B,IAMF,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAKjC,UAAU,OAAf,SACE,cAAC,EAAD,CAAOoB,MAPS,SAACc,GACrBP,EAASO,EAAMC,OAAOC,YAQpB,cAAC,EAAD,CAAW1B,SAAUc,EAAKa,QAAO,SAAAzB,GAC/B,OAAOA,EAAML,KAAK+B,cAAcC,SAASb,EAAMY,wBCxDvDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.333bf865.chunk.js","sourcesContent":["import '../bootstrap/morph/bootstrap.min.css'\r\n\r\nconst Container = (props) => {\r\n    return <div className=\"container mt-5\">{props.children}</div>\r\n}\r\n\r\nexport default Container;","import '../bootstrap/morph/bootstrap.min.css'\r\n\r\nconst Row = (props) => {\r\n    return <div className={`row ${props.className}`}>{props.children}</div>\r\n}\r\n\r\nexport default Row;","import '../bootstrap/morph/bootstrap.min.css';\r\n\r\nconst Card = (props) =>{\r\n    return (\r\n        <div className=\"col  text-center\">\r\n            <div className=\" col-10 mx-auto card\">\r\n                <img alt=\"Robots\" src={`https://robohash.org/${props.id}`} />\r\n                <div className=\"p-1\">\r\n                    <h4>{props.name}</h4>\r\n                    <p>{props.email}</p>\r\n                </div>            \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import '../bootstrap/morph/bootstrap.min.css';\r\n\r\nimport Card from './Card';\r\nimport Row from '../Ui/Row';\r\n\r\nconst FinalCard = (props) =>{\r\n    return(\r\n        <Row className=\"row-cols-md-4 row-cols-2 gy-3 d-flex justify-content-around\">\r\n          {props.botArray.map(robot => {\r\n            return (\r\n              <Card key={Math.random().toString()} id={robot.id} name={robot.name} email={robot.email}/>\r\n            )\r\n          })}\r\n      </Row>\r\n    );\r\n}\r\n\r\nexport default FinalCard;","import '../bootstrap/morph/bootstrap.min.css';\r\n\r\nimport React from 'react';\r\n\r\nconst Input = (props) =>{\r\n\r\n    return (\r\n        <div className=\"col-8 col-md-4 col-sm-6 form-floating mx-auto\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Bot-Name\" onChange={props.inApp}/>\r\n            <label htmlFor=\"Name\">Name</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React ,{ useState, useEffect }from 'react';\nimport Container from './Components/Ui/Container';\nimport Row from './Components/Ui/Row';\nimport FinalCard from './Components/Card/FinalCard';\nimport Input from './Components/Input/Input';\n\n\n// class App extends React.Component {\n//   constructor (){\n//     super();\n//     this.state = {\n//       robots: [],\n//     };\n//   }\n\n//   componentDidMount() {\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then( (response) => response.json())\n    //   .then( users => this.setState({robots: users}));\n      \n//   }\n  \n  //  onValueChange = (changedValue) =>{\n  //   changedValue !== \" \" && this.setState( {robots:this.state.robots.filter(robot =>{\n  //     return robot.name.toLowerCase().includes(changedValue.toLowerCase())\n  //   })}) \n    \n  // }\n\n//   render() {\n//     return (\n//       <Container>\n//         <Row className=\"mb-3\">\n//           <Input inApp ={this.onValueChange}/>\n//         </Row>\n//         <FinalCard botArray={this.state.robots}/>\n//       </Container>\n//     );\n//   }\n// }\n\nconst App = () =>{\n  const [user, setUser] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect( () =>{\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then( (response) => response.json())\n      .then( users => setUser(users));\n  },[])\n  \n  const onValueChange = (event) =>{\n    setInput(event.target.value);\n  }\n\n  return (\n    <Container>\n      <Row className=\"mb-3\">\n        <Input inApp ={onValueChange}/>\n      </Row>\n      <FinalCard botArray={user.filter(robot =>{\n        return robot.name.toLowerCase().includes(input.toLowerCase())\n      })}/>\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}